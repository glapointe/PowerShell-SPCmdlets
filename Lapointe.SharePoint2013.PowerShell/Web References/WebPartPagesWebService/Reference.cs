//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace Lapointe.SharePoint.PowerShell.WebPartPagesWebService {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="WebPartPagesWebServiceSoap", Namespace="http://microsoft.com/sharepoint/webpartpages")]
    public partial class WebPartPagesWebService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback GetWebPartPageDocumentOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetWebPartPageOperationCompleted;
        
        private System.Threading.SendOrPostCallback RenderWebPartForEditOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetXmlDataFromDataSourceOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFormCapabilityFromDataSourceControlOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetExpandedListViewXmlOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDataFromDataSourceControlOperationCompleted;
        
        private System.Threading.SendOrPostCallback FetchLegalWorkflowActionsOperationCompleted;
        
        private System.Threading.SendOrPostCallback ValidateWorkflowMarkupAndCreateSupportObjectsOperationCompleted;
        
        private System.Threading.SendOrPostCallback AssociateWorkflowMarkupOperationCompleted;
        
        private System.Threading.SendOrPostCallback RemoveWorkflowAssociationOperationCompleted;
        
        private System.Threading.SendOrPostCallback ConvertWebPartFormatOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAssemblyMetaDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBindingResourceDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback ExecuteProxyUpdatesOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddWebPartToZoneOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddWebPartOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetWebPartOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetWebPart2OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCustomControlListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSafeAssemblyInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetWebPartPropertiesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetWebPartProperties2OperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveWebPartOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveWebPart2OperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteWebPartOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetWebPartPageConnectionInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetWebPartCrossPageCompatibilityOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public WebPartPagesWebService() {
            this.Url = "http://demo/_vti_bin/WebPartPages.asmx";
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event GetWebPartPageDocumentCompletedEventHandler GetWebPartPageDocumentCompleted;
        
        /// <remarks/>
        public event GetWebPartPageCompletedEventHandler GetWebPartPageCompleted;
        
        /// <remarks/>
        public event RenderWebPartForEditCompletedEventHandler RenderWebPartForEditCompleted;
        
        /// <remarks/>
        public event GetXmlDataFromDataSourceCompletedEventHandler GetXmlDataFromDataSourceCompleted;
        
        /// <remarks/>
        public event GetFormCapabilityFromDataSourceControlCompletedEventHandler GetFormCapabilityFromDataSourceControlCompleted;
        
        /// <remarks/>
        public event GetExpandedListViewXmlCompletedEventHandler GetExpandedListViewXmlCompleted;
        
        /// <remarks/>
        public event GetDataFromDataSourceControlCompletedEventHandler GetDataFromDataSourceControlCompleted;
        
        /// <remarks/>
        public event FetchLegalWorkflowActionsCompletedEventHandler FetchLegalWorkflowActionsCompleted;
        
        /// <remarks/>
        public event ValidateWorkflowMarkupAndCreateSupportObjectsCompletedEventHandler ValidateWorkflowMarkupAndCreateSupportObjectsCompleted;
        
        /// <remarks/>
        public event AssociateWorkflowMarkupCompletedEventHandler AssociateWorkflowMarkupCompleted;
        
        /// <remarks/>
        public event RemoveWorkflowAssociationCompletedEventHandler RemoveWorkflowAssociationCompleted;
        
        /// <remarks/>
        public event ConvertWebPartFormatCompletedEventHandler ConvertWebPartFormatCompleted;
        
        /// <remarks/>
        public event GetAssemblyMetaDataCompletedEventHandler GetAssemblyMetaDataCompleted;
        
        /// <remarks/>
        public event GetBindingResourceDataCompletedEventHandler GetBindingResourceDataCompleted;
        
        /// <remarks/>
        public event ExecuteProxyUpdatesCompletedEventHandler ExecuteProxyUpdatesCompleted;
        
        /// <remarks/>
        public event AddWebPartToZoneCompletedEventHandler AddWebPartToZoneCompleted;
        
        /// <remarks/>
        public event AddWebPartCompletedEventHandler AddWebPartCompleted;
        
        /// <remarks/>
        public event GetWebPartCompletedEventHandler GetWebPartCompleted;
        
        /// <remarks/>
        public event GetWebPart2CompletedEventHandler GetWebPart2Completed;
        
        /// <remarks/>
        public event GetCustomControlListCompletedEventHandler GetCustomControlListCompleted;
        
        /// <remarks/>
        public event GetSafeAssemblyInfoCompletedEventHandler GetSafeAssemblyInfoCompleted;
        
        /// <remarks/>
        public event GetWebPartPropertiesCompletedEventHandler GetWebPartPropertiesCompleted;
        
        /// <remarks/>
        public event GetWebPartProperties2CompletedEventHandler GetWebPartProperties2Completed;
        
        /// <remarks/>
        public event SaveWebPartCompletedEventHandler SaveWebPartCompleted;
        
        /// <remarks/>
        public event SaveWebPart2CompletedEventHandler SaveWebPart2Completed;
        
        /// <remarks/>
        public event DeleteWebPartCompletedEventHandler DeleteWebPartCompleted;
        
        /// <remarks/>
        public event GetWebPartPageConnectionInfoCompletedEventHandler GetWebPartPageConnectionInfoCompleted;
        
        /// <remarks/>
        public event GetWebPartCrossPageCompatibilityCompletedEventHandler GetWebPartCrossPageCompatibilityCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://microsoft.com/sharepoint/webpartpages/GetWebPartPageDocument", RequestNamespace="http://microsoft.com/sharepoint/webpartpages", ResponseNamespace="http://microsoft.com/sharepoint/webpartpages", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetWebPartPageDocument(string documentName) {
            object[] results = this.Invoke("GetWebPartPageDocument", new object[] {
                        documentName});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetWebPartPageDocumentAsync(string documentName) {
            this.GetWebPartPageDocumentAsync(documentName, null);
        }
        
        /// <remarks/>
        public void GetWebPartPageDocumentAsync(string documentName, object userState) {
            if ((this.GetWebPartPageDocumentOperationCompleted == null)) {
                this.GetWebPartPageDocumentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetWebPartPageDocumentOperationCompleted);
            }
            this.InvokeAsync("GetWebPartPageDocument", new object[] {
                        documentName}, this.GetWebPartPageDocumentOperationCompleted, userState);
        }
        
        private void OnGetWebPartPageDocumentOperationCompleted(object arg) {
            if ((this.GetWebPartPageDocumentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetWebPartPageDocumentCompleted(this, new GetWebPartPageDocumentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://microsoft.com/sharepoint/webpartpages/GetWebPartPage", RequestNamespace="http://microsoft.com/sharepoint/webpartpages", ResponseNamespace="http://microsoft.com/sharepoint/webpartpages", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetWebPartPage(string documentName, SPWebServiceBehavior behavior) {
            object[] results = this.Invoke("GetWebPartPage", new object[] {
                        documentName,
                        behavior});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetWebPartPageAsync(string documentName, SPWebServiceBehavior behavior) {
            this.GetWebPartPageAsync(documentName, behavior, null);
        }
        
        /// <remarks/>
        public void GetWebPartPageAsync(string documentName, SPWebServiceBehavior behavior, object userState) {
            if ((this.GetWebPartPageOperationCompleted == null)) {
                this.GetWebPartPageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetWebPartPageOperationCompleted);
            }
            this.InvokeAsync("GetWebPartPage", new object[] {
                        documentName,
                        behavior}, this.GetWebPartPageOperationCompleted, userState);
        }
        
        private void OnGetWebPartPageOperationCompleted(object arg) {
            if ((this.GetWebPartPageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetWebPartPageCompleted(this, new GetWebPartPageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://microsoft.com/sharepoint/webpartpages/RenderWebPartForEdit", RequestNamespace="http://microsoft.com/sharepoint/webpartpages", ResponseNamespace="http://microsoft.com/sharepoint/webpartpages", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string RenderWebPartForEdit(string webPartXml) {
            object[] results = this.Invoke("RenderWebPartForEdit", new object[] {
                        webPartXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void RenderWebPartForEditAsync(string webPartXml) {
            this.RenderWebPartForEditAsync(webPartXml, null);
        }
        
        /// <remarks/>
        public void RenderWebPartForEditAsync(string webPartXml, object userState) {
            if ((this.RenderWebPartForEditOperationCompleted == null)) {
                this.RenderWebPartForEditOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRenderWebPartForEditOperationCompleted);
            }
            this.InvokeAsync("RenderWebPartForEdit", new object[] {
                        webPartXml}, this.RenderWebPartForEditOperationCompleted, userState);
        }
        
        private void OnRenderWebPartForEditOperationCompleted(object arg) {
            if ((this.RenderWebPartForEditCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RenderWebPartForEditCompleted(this, new RenderWebPartForEditCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://microsoft.com/sharepoint/webpartpages/GetXmlDataFromDataSource", RequestNamespace="http://microsoft.com/sharepoint/webpartpages", ResponseNamespace="http://microsoft.com/sharepoint/webpartpages", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetXmlDataFromDataSource(string queryXml) {
            object[] results = this.Invoke("GetXmlDataFromDataSource", new object[] {
                        queryXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetXmlDataFromDataSourceAsync(string queryXml) {
            this.GetXmlDataFromDataSourceAsync(queryXml, null);
        }
        
        /// <remarks/>
        public void GetXmlDataFromDataSourceAsync(string queryXml, object userState) {
            if ((this.GetXmlDataFromDataSourceOperationCompleted == null)) {
                this.GetXmlDataFromDataSourceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetXmlDataFromDataSourceOperationCompleted);
            }
            this.InvokeAsync("GetXmlDataFromDataSource", new object[] {
                        queryXml}, this.GetXmlDataFromDataSourceOperationCompleted, userState);
        }
        
        private void OnGetXmlDataFromDataSourceOperationCompleted(object arg) {
            if ((this.GetXmlDataFromDataSourceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetXmlDataFromDataSourceCompleted(this, new GetXmlDataFromDataSourceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://microsoft.com/sharepoint/webpartpages/GetFormCapabilityFromDataSourceContr" +
            "ol", RequestNamespace="http://microsoft.com/sharepoint/webpartpages", ResponseNamespace="http://microsoft.com/sharepoint/webpartpages", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetFormCapabilityFromDataSourceControl(string dscXml) {
            object[] results = this.Invoke("GetFormCapabilityFromDataSourceControl", new object[] {
                        dscXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetFormCapabilityFromDataSourceControlAsync(string dscXml) {
            this.GetFormCapabilityFromDataSourceControlAsync(dscXml, null);
        }
        
        /// <remarks/>
        public void GetFormCapabilityFromDataSourceControlAsync(string dscXml, object userState) {
            if ((this.GetFormCapabilityFromDataSourceControlOperationCompleted == null)) {
                this.GetFormCapabilityFromDataSourceControlOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFormCapabilityFromDataSourceControlOperationCompleted);
            }
            this.InvokeAsync("GetFormCapabilityFromDataSourceControl", new object[] {
                        dscXml}, this.GetFormCapabilityFromDataSourceControlOperationCompleted, userState);
        }
        
        private void OnGetFormCapabilityFromDataSourceControlOperationCompleted(object arg) {
            if ((this.GetFormCapabilityFromDataSourceControlCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFormCapabilityFromDataSourceControlCompleted(this, new GetFormCapabilityFromDataSourceControlCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://microsoft.com/sharepoint/webpartpages/GetExpandedListViewXml", RequestNamespace="http://microsoft.com/sharepoint/webpartpages", ResponseNamespace="http://microsoft.com/sharepoint/webpartpages", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetExpandedListViewXml(string webId, string listViewXml, string listGuid, string listUrl, string listDisplayName, bool hasConnection, [System.Xml.Serialization.XmlIgnoreAttribute()] bool hasConnectionSpecified, bool partialView, [System.Xml.Serialization.XmlIgnoreAttribute()] bool partialViewSpecified) {
            object[] results = this.Invoke("GetExpandedListViewXml", new object[] {
                        webId,
                        listViewXml,
                        listGuid,
                        listUrl,
                        listDisplayName,
                        hasConnection,
                        hasConnectionSpecified,
                        partialView,
                        partialViewSpecified});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetExpandedListViewXmlAsync(string webId, string listViewXml, string listGuid, string listUrl, string listDisplayName, bool hasConnection, bool hasConnectionSpecified, bool partialView, bool partialViewSpecified) {
            this.GetExpandedListViewXmlAsync(webId, listViewXml, listGuid, listUrl, listDisplayName, hasConnection, hasConnectionSpecified, partialView, partialViewSpecified, null);
        }
        
        /// <remarks/>
        public void GetExpandedListViewXmlAsync(string webId, string listViewXml, string listGuid, string listUrl, string listDisplayName, bool hasConnection, bool hasConnectionSpecified, bool partialView, bool partialViewSpecified, object userState) {
            if ((this.GetExpandedListViewXmlOperationCompleted == null)) {
                this.GetExpandedListViewXmlOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetExpandedListViewXmlOperationCompleted);
            }
            this.InvokeAsync("GetExpandedListViewXml", new object[] {
                        webId,
                        listViewXml,
                        listGuid,
                        listUrl,
                        listDisplayName,
                        hasConnection,
                        hasConnectionSpecified,
                        partialView,
                        partialViewSpecified}, this.GetExpandedListViewXmlOperationCompleted, userState);
        }
        
        private void OnGetExpandedListViewXmlOperationCompleted(object arg) {
            if ((this.GetExpandedListViewXmlCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetExpandedListViewXmlCompleted(this, new GetExpandedListViewXmlCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://microsoft.com/sharepoint/webpartpages/GetDataFromDataSourceControl", RequestNamespace="http://microsoft.com/sharepoint/webpartpages", ResponseNamespace="http://microsoft.com/sharepoint/webpartpages", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetDataFromDataSourceControl(string dscXml, string contextUrl) {
            object[] results = this.Invoke("GetDataFromDataSourceControl", new object[] {
                        dscXml,
                        contextUrl});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetDataFromDataSourceControlAsync(string dscXml, string contextUrl) {
            this.GetDataFromDataSourceControlAsync(dscXml, contextUrl, null);
        }
        
        /// <remarks/>
        public void GetDataFromDataSourceControlAsync(string dscXml, string contextUrl, object userState) {
            if ((this.GetDataFromDataSourceControlOperationCompleted == null)) {
                this.GetDataFromDataSourceControlOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDataFromDataSourceControlOperationCompleted);
            }
            this.InvokeAsync("GetDataFromDataSourceControl", new object[] {
                        dscXml,
                        contextUrl}, this.GetDataFromDataSourceControlOperationCompleted, userState);
        }
        
        private void OnGetDataFromDataSourceControlOperationCompleted(object arg) {
            if ((this.GetDataFromDataSourceControlCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDataFromDataSourceControlCompleted(this, new GetDataFromDataSourceControlCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://microsoft.com/sharepoint/webpartpages/FetchLegalWorkflowActions", RequestNamespace="http://microsoft.com/sharepoint/webpartpages", ResponseNamespace="http://microsoft.com/sharepoint/webpartpages", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string FetchLegalWorkflowActions() {
            object[] results = this.Invoke("FetchLegalWorkflowActions", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FetchLegalWorkflowActionsAsync() {
            this.FetchLegalWorkflowActionsAsync(null);
        }
        
        /// <remarks/>
        public void FetchLegalWorkflowActionsAsync(object userState) {
            if ((this.FetchLegalWorkflowActionsOperationCompleted == null)) {
                this.FetchLegalWorkflowActionsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFetchLegalWorkflowActionsOperationCompleted);
            }
            this.InvokeAsync("FetchLegalWorkflowActions", new object[0], this.FetchLegalWorkflowActionsOperationCompleted, userState);
        }
        
        private void OnFetchLegalWorkflowActionsOperationCompleted(object arg) {
            if ((this.FetchLegalWorkflowActionsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FetchLegalWorkflowActionsCompleted(this, new FetchLegalWorkflowActionsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://microsoft.com/sharepoint/webpartpages/ValidateWorkflowMarkupAndCreateSuppo" +
            "rtObjects", RequestNamespace="http://microsoft.com/sharepoint/webpartpages", ResponseNamespace="http://microsoft.com/sharepoint/webpartpages", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ValidateWorkflowMarkupAndCreateSupportObjects(string workflowMarkupText, string rulesText, string configBlob, string flag) {
            object[] results = this.Invoke("ValidateWorkflowMarkupAndCreateSupportObjects", new object[] {
                        workflowMarkupText,
                        rulesText,
                        configBlob,
                        flag});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ValidateWorkflowMarkupAndCreateSupportObjectsAsync(string workflowMarkupText, string rulesText, string configBlob, string flag) {
            this.ValidateWorkflowMarkupAndCreateSupportObjectsAsync(workflowMarkupText, rulesText, configBlob, flag, null);
        }
        
        /// <remarks/>
        public void ValidateWorkflowMarkupAndCreateSupportObjectsAsync(string workflowMarkupText, string rulesText, string configBlob, string flag, object userState) {
            if ((this.ValidateWorkflowMarkupAndCreateSupportObjectsOperationCompleted == null)) {
                this.ValidateWorkflowMarkupAndCreateSupportObjectsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnValidateWorkflowMarkupAndCreateSupportObjectsOperationCompleted);
            }
            this.InvokeAsync("ValidateWorkflowMarkupAndCreateSupportObjects", new object[] {
                        workflowMarkupText,
                        rulesText,
                        configBlob,
                        flag}, this.ValidateWorkflowMarkupAndCreateSupportObjectsOperationCompleted, userState);
        }
        
        private void OnValidateWorkflowMarkupAndCreateSupportObjectsOperationCompleted(object arg) {
            if ((this.ValidateWorkflowMarkupAndCreateSupportObjectsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ValidateWorkflowMarkupAndCreateSupportObjectsCompleted(this, new ValidateWorkflowMarkupAndCreateSupportObjectsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://microsoft.com/sharepoint/webpartpages/AssociateWorkflowMarkup", RequestNamespace="http://microsoft.com/sharepoint/webpartpages", ResponseNamespace="http://microsoft.com/sharepoint/webpartpages", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string AssociateWorkflowMarkup(string configUrl, string configVersion) {
            object[] results = this.Invoke("AssociateWorkflowMarkup", new object[] {
                        configUrl,
                        configVersion});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AssociateWorkflowMarkupAsync(string configUrl, string configVersion) {
            this.AssociateWorkflowMarkupAsync(configUrl, configVersion, null);
        }
        
        /// <remarks/>
        public void AssociateWorkflowMarkupAsync(string configUrl, string configVersion, object userState) {
            if ((this.AssociateWorkflowMarkupOperationCompleted == null)) {
                this.AssociateWorkflowMarkupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAssociateWorkflowMarkupOperationCompleted);
            }
            this.InvokeAsync("AssociateWorkflowMarkup", new object[] {
                        configUrl,
                        configVersion}, this.AssociateWorkflowMarkupOperationCompleted, userState);
        }
        
        private void OnAssociateWorkflowMarkupOperationCompleted(object arg) {
            if ((this.AssociateWorkflowMarkupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AssociateWorkflowMarkupCompleted(this, new AssociateWorkflowMarkupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://microsoft.com/sharepoint/webpartpages/RemoveWorkflowAssociation", RequestNamespace="http://microsoft.com/sharepoint/webpartpages", ResponseNamespace="http://microsoft.com/sharepoint/webpartpages", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string RemoveWorkflowAssociation(string configUrl, string configVersion) {
            object[] results = this.Invoke("RemoveWorkflowAssociation", new object[] {
                        configUrl,
                        configVersion});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void RemoveWorkflowAssociationAsync(string configUrl, string configVersion) {
            this.RemoveWorkflowAssociationAsync(configUrl, configVersion, null);
        }
        
        /// <remarks/>
        public void RemoveWorkflowAssociationAsync(string configUrl, string configVersion, object userState) {
            if ((this.RemoveWorkflowAssociationOperationCompleted == null)) {
                this.RemoveWorkflowAssociationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRemoveWorkflowAssociationOperationCompleted);
            }
            this.InvokeAsync("RemoveWorkflowAssociation", new object[] {
                        configUrl,
                        configVersion}, this.RemoveWorkflowAssociationOperationCompleted, userState);
        }
        
        private void OnRemoveWorkflowAssociationOperationCompleted(object arg) {
            if ((this.RemoveWorkflowAssociationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RemoveWorkflowAssociationCompleted(this, new RemoveWorkflowAssociationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://microsoft.com/sharepoint/webpartpages/ConvertWebPartFormat", RequestNamespace="http://microsoft.com/sharepoint/webpartpages", ResponseNamespace="http://microsoft.com/sharepoint/webpartpages", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ConvertWebPartFormat(string inputFormat, FormatConversionOption formatConversionOption) {
            object[] results = this.Invoke("ConvertWebPartFormat", new object[] {
                        inputFormat,
                        formatConversionOption});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ConvertWebPartFormatAsync(string inputFormat, FormatConversionOption formatConversionOption) {
            this.ConvertWebPartFormatAsync(inputFormat, formatConversionOption, null);
        }
        
        /// <remarks/>
        public void ConvertWebPartFormatAsync(string inputFormat, FormatConversionOption formatConversionOption, object userState) {
            if ((this.ConvertWebPartFormatOperationCompleted == null)) {
                this.ConvertWebPartFormatOperationCompleted = new System.Threading.SendOrPostCallback(this.OnConvertWebPartFormatOperationCompleted);
            }
            this.InvokeAsync("ConvertWebPartFormat", new object[] {
                        inputFormat,
                        formatConversionOption}, this.ConvertWebPartFormatOperationCompleted, userState);
        }
        
        private void OnConvertWebPartFormatOperationCompleted(object arg) {
            if ((this.ConvertWebPartFormatCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ConvertWebPartFormatCompleted(this, new ConvertWebPartFormatCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://microsoft.com/sharepoint/webpartpages/GetAssemblyMetaData", RequestNamespace="http://microsoft.com/sharepoint/webpartpages", ResponseNamespace="http://microsoft.com/sharepoint/webpartpages", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetAssemblyMetaData(string assemblyName, string baseTypes) {
            object[] results = this.Invoke("GetAssemblyMetaData", new object[] {
                        assemblyName,
                        baseTypes});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetAssemblyMetaDataAsync(string assemblyName, string baseTypes) {
            this.GetAssemblyMetaDataAsync(assemblyName, baseTypes, null);
        }
        
        /// <remarks/>
        public void GetAssemblyMetaDataAsync(string assemblyName, string baseTypes, object userState) {
            if ((this.GetAssemblyMetaDataOperationCompleted == null)) {
                this.GetAssemblyMetaDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAssemblyMetaDataOperationCompleted);
            }
            this.InvokeAsync("GetAssemblyMetaData", new object[] {
                        assemblyName,
                        baseTypes}, this.GetAssemblyMetaDataOperationCompleted, userState);
        }
        
        private void OnGetAssemblyMetaDataOperationCompleted(object arg) {
            if ((this.GetAssemblyMetaDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAssemblyMetaDataCompleted(this, new GetAssemblyMetaDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://microsoft.com/sharepoint/webpartpages/GetBindingResourceData", RequestNamespace="http://microsoft.com/sharepoint/webpartpages", ResponseNamespace="http://microsoft.com/sharepoint/webpartpages", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetBindingResourceData(string ResourceName) {
            object[] results = this.Invoke("GetBindingResourceData", new object[] {
                        ResourceName});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetBindingResourceDataAsync(string ResourceName) {
            this.GetBindingResourceDataAsync(ResourceName, null);
        }
        
        /// <remarks/>
        public void GetBindingResourceDataAsync(string ResourceName, object userState) {
            if ((this.GetBindingResourceDataOperationCompleted == null)) {
                this.GetBindingResourceDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBindingResourceDataOperationCompleted);
            }
            this.InvokeAsync("GetBindingResourceData", new object[] {
                        ResourceName}, this.GetBindingResourceDataOperationCompleted, userState);
        }
        
        private void OnGetBindingResourceDataOperationCompleted(object arg) {
            if ((this.GetBindingResourceDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBindingResourceDataCompleted(this, new GetBindingResourceDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://microsoft.com/sharepoint/webpartpages/ExecuteProxyUpdates", RequestNamespace="http://microsoft.com/sharepoint/webpartpages", ResponseNamespace="http://microsoft.com/sharepoint/webpartpages", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ExecuteProxyUpdates(string updateData) {
            object[] results = this.Invoke("ExecuteProxyUpdates", new object[] {
                        updateData});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ExecuteProxyUpdatesAsync(string updateData) {
            this.ExecuteProxyUpdatesAsync(updateData, null);
        }
        
        /// <remarks/>
        public void ExecuteProxyUpdatesAsync(string updateData, object userState) {
            if ((this.ExecuteProxyUpdatesOperationCompleted == null)) {
                this.ExecuteProxyUpdatesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExecuteProxyUpdatesOperationCompleted);
            }
            this.InvokeAsync("ExecuteProxyUpdates", new object[] {
                        updateData}, this.ExecuteProxyUpdatesOperationCompleted, userState);
        }
        
        private void OnExecuteProxyUpdatesOperationCompleted(object arg) {
            if ((this.ExecuteProxyUpdatesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ExecuteProxyUpdatesCompleted(this, new ExecuteProxyUpdatesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://microsoft.com/sharepoint/webpartpages/AddWebPartToZone", RequestNamespace="http://microsoft.com/sharepoint/webpartpages", ResponseNamespace="http://microsoft.com/sharepoint/webpartpages", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Guid AddWebPartToZone(string pageUrl, string webPartXml, Storage storage, string zoneId, int zoneIndex) {
            object[] results = this.Invoke("AddWebPartToZone", new object[] {
                        pageUrl,
                        webPartXml,
                        storage,
                        zoneId,
                        zoneIndex});
            return ((System.Guid)(results[0]));
        }
        
        /// <remarks/>
        public void AddWebPartToZoneAsync(string pageUrl, string webPartXml, Storage storage, string zoneId, int zoneIndex) {
            this.AddWebPartToZoneAsync(pageUrl, webPartXml, storage, zoneId, zoneIndex, null);
        }
        
        /// <remarks/>
        public void AddWebPartToZoneAsync(string pageUrl, string webPartXml, Storage storage, string zoneId, int zoneIndex, object userState) {
            if ((this.AddWebPartToZoneOperationCompleted == null)) {
                this.AddWebPartToZoneOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddWebPartToZoneOperationCompleted);
            }
            this.InvokeAsync("AddWebPartToZone", new object[] {
                        pageUrl,
                        webPartXml,
                        storage,
                        zoneId,
                        zoneIndex}, this.AddWebPartToZoneOperationCompleted, userState);
        }
        
        private void OnAddWebPartToZoneOperationCompleted(object arg) {
            if ((this.AddWebPartToZoneCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddWebPartToZoneCompleted(this, new AddWebPartToZoneCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://microsoft.com/sharepoint/webpartpages/AddWebPart", RequestNamespace="http://microsoft.com/sharepoint/webpartpages", ResponseNamespace="http://microsoft.com/sharepoint/webpartpages", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Guid AddWebPart(string pageUrl, string webPartXml, Storage storage) {
            object[] results = this.Invoke("AddWebPart", new object[] {
                        pageUrl,
                        webPartXml,
                        storage});
            return ((System.Guid)(results[0]));
        }
        
        /// <remarks/>
        public void AddWebPartAsync(string pageUrl, string webPartXml, Storage storage) {
            this.AddWebPartAsync(pageUrl, webPartXml, storage, null);
        }
        
        /// <remarks/>
        public void AddWebPartAsync(string pageUrl, string webPartXml, Storage storage, object userState) {
            if ((this.AddWebPartOperationCompleted == null)) {
                this.AddWebPartOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddWebPartOperationCompleted);
            }
            this.InvokeAsync("AddWebPart", new object[] {
                        pageUrl,
                        webPartXml,
                        storage}, this.AddWebPartOperationCompleted, userState);
        }
        
        private void OnAddWebPartOperationCompleted(object arg) {
            if ((this.AddWebPartCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddWebPartCompleted(this, new AddWebPartCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://microsoft.com/sharepoint/webpartpages/GetWebPart", RequestNamespace="http://microsoft.com/sharepoint/webpartpages", ResponseNamespace="http://microsoft.com/sharepoint/webpartpages", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetWebPart(string pageurl, System.Guid storageKey, Storage storage) {
            object[] results = this.Invoke("GetWebPart", new object[] {
                        pageurl,
                        storageKey,
                        storage});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetWebPartAsync(string pageurl, System.Guid storageKey, Storage storage) {
            this.GetWebPartAsync(pageurl, storageKey, storage, null);
        }
        
        /// <remarks/>
        public void GetWebPartAsync(string pageurl, System.Guid storageKey, Storage storage, object userState) {
            if ((this.GetWebPartOperationCompleted == null)) {
                this.GetWebPartOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetWebPartOperationCompleted);
            }
            this.InvokeAsync("GetWebPart", new object[] {
                        pageurl,
                        storageKey,
                        storage}, this.GetWebPartOperationCompleted, userState);
        }
        
        private void OnGetWebPartOperationCompleted(object arg) {
            if ((this.GetWebPartCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetWebPartCompleted(this, new GetWebPartCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://microsoft.com/sharepoint/webpartpages/GetWebPart2", RequestNamespace="http://microsoft.com/sharepoint/webpartpages", ResponseNamespace="http://microsoft.com/sharepoint/webpartpages", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetWebPart2(string pageurl, System.Guid storageKey, Storage storage, SPWebServiceBehavior behavior) {
            object[] results = this.Invoke("GetWebPart2", new object[] {
                        pageurl,
                        storageKey,
                        storage,
                        behavior});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetWebPart2Async(string pageurl, System.Guid storageKey, Storage storage, SPWebServiceBehavior behavior) {
            this.GetWebPart2Async(pageurl, storageKey, storage, behavior, null);
        }
        
        /// <remarks/>
        public void GetWebPart2Async(string pageurl, System.Guid storageKey, Storage storage, SPWebServiceBehavior behavior, object userState) {
            if ((this.GetWebPart2OperationCompleted == null)) {
                this.GetWebPart2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetWebPart2OperationCompleted);
            }
            this.InvokeAsync("GetWebPart2", new object[] {
                        pageurl,
                        storageKey,
                        storage,
                        behavior}, this.GetWebPart2OperationCompleted, userState);
        }
        
        private void OnGetWebPart2OperationCompleted(object arg) {
            if ((this.GetWebPart2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetWebPart2Completed(this, new GetWebPart2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://microsoft.com/sharepoint/webpartpages/GetCustomControlList", RequestNamespace="http://microsoft.com/sharepoint/webpartpages", ResponseNamespace="http://microsoft.com/sharepoint/webpartpages", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode GetCustomControlList() {
            object[] results = this.Invoke("GetCustomControlList", new object[0]);
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void GetCustomControlListAsync() {
            this.GetCustomControlListAsync(null);
        }
        
        /// <remarks/>
        public void GetCustomControlListAsync(object userState) {
            if ((this.GetCustomControlListOperationCompleted == null)) {
                this.GetCustomControlListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCustomControlListOperationCompleted);
            }
            this.InvokeAsync("GetCustomControlList", new object[0], this.GetCustomControlListOperationCompleted, userState);
        }
        
        private void OnGetCustomControlListOperationCompleted(object arg) {
            if ((this.GetCustomControlListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCustomControlListCompleted(this, new GetCustomControlListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://microsoft.com/sharepoint/webpartpages/GetSafeAssemblyInfo", RequestNamespace="http://microsoft.com/sharepoint/webpartpages", ResponseNamespace="http://microsoft.com/sharepoint/webpartpages", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode GetSafeAssemblyInfo() {
            object[] results = this.Invoke("GetSafeAssemblyInfo", new object[0]);
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void GetSafeAssemblyInfoAsync() {
            this.GetSafeAssemblyInfoAsync(null);
        }
        
        /// <remarks/>
        public void GetSafeAssemblyInfoAsync(object userState) {
            if ((this.GetSafeAssemblyInfoOperationCompleted == null)) {
                this.GetSafeAssemblyInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSafeAssemblyInfoOperationCompleted);
            }
            this.InvokeAsync("GetSafeAssemblyInfo", new object[0], this.GetSafeAssemblyInfoOperationCompleted, userState);
        }
        
        private void OnGetSafeAssemblyInfoOperationCompleted(object arg) {
            if ((this.GetSafeAssemblyInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSafeAssemblyInfoCompleted(this, new GetSafeAssemblyInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://microsoft.com/sharepoint/webpartpages/GetWebPartProperties", RequestNamespace="http://microsoft.com/sharepoint/webpartpages", ResponseNamespace="http://microsoft.com/sharepoint/webpartpages", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode GetWebPartProperties(string pageUrl, Storage storage) {
            object[] results = this.Invoke("GetWebPartProperties", new object[] {
                        pageUrl,
                        storage});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void GetWebPartPropertiesAsync(string pageUrl, Storage storage) {
            this.GetWebPartPropertiesAsync(pageUrl, storage, null);
        }
        
        /// <remarks/>
        public void GetWebPartPropertiesAsync(string pageUrl, Storage storage, object userState) {
            if ((this.GetWebPartPropertiesOperationCompleted == null)) {
                this.GetWebPartPropertiesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetWebPartPropertiesOperationCompleted);
            }
            this.InvokeAsync("GetWebPartProperties", new object[] {
                        pageUrl,
                        storage}, this.GetWebPartPropertiesOperationCompleted, userState);
        }
        
        private void OnGetWebPartPropertiesOperationCompleted(object arg) {
            if ((this.GetWebPartPropertiesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetWebPartPropertiesCompleted(this, new GetWebPartPropertiesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://microsoft.com/sharepoint/webpartpages/GetWebPartProperties2", RequestNamespace="http://microsoft.com/sharepoint/webpartpages", ResponseNamespace="http://microsoft.com/sharepoint/webpartpages", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode GetWebPartProperties2(string pageUrl, Storage storage, SPWebServiceBehavior behavior) {
            object[] results = this.Invoke("GetWebPartProperties2", new object[] {
                        pageUrl,
                        storage,
                        behavior});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void GetWebPartProperties2Async(string pageUrl, Storage storage, SPWebServiceBehavior behavior) {
            this.GetWebPartProperties2Async(pageUrl, storage, behavior, null);
        }
        
        /// <remarks/>
        public void GetWebPartProperties2Async(string pageUrl, Storage storage, SPWebServiceBehavior behavior, object userState) {
            if ((this.GetWebPartProperties2OperationCompleted == null)) {
                this.GetWebPartProperties2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetWebPartProperties2OperationCompleted);
            }
            this.InvokeAsync("GetWebPartProperties2", new object[] {
                        pageUrl,
                        storage,
                        behavior}, this.GetWebPartProperties2OperationCompleted, userState);
        }
        
        private void OnGetWebPartProperties2OperationCompleted(object arg) {
            if ((this.GetWebPartProperties2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetWebPartProperties2Completed(this, new GetWebPartProperties2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://microsoft.com/sharepoint/webpartpages/SaveWebPart", RequestNamespace="http://microsoft.com/sharepoint/webpartpages", ResponseNamespace="http://microsoft.com/sharepoint/webpartpages", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SaveWebPart(string pageUrl, System.Guid storageKey, string webPartXml, Storage storage) {
            this.Invoke("SaveWebPart", new object[] {
                        pageUrl,
                        storageKey,
                        webPartXml,
                        storage});
        }
        
        /// <remarks/>
        public void SaveWebPartAsync(string pageUrl, System.Guid storageKey, string webPartXml, Storage storage) {
            this.SaveWebPartAsync(pageUrl, storageKey, webPartXml, storage, null);
        }
        
        /// <remarks/>
        public void SaveWebPartAsync(string pageUrl, System.Guid storageKey, string webPartXml, Storage storage, object userState) {
            if ((this.SaveWebPartOperationCompleted == null)) {
                this.SaveWebPartOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveWebPartOperationCompleted);
            }
            this.InvokeAsync("SaveWebPart", new object[] {
                        pageUrl,
                        storageKey,
                        webPartXml,
                        storage}, this.SaveWebPartOperationCompleted, userState);
        }
        
        private void OnSaveWebPartOperationCompleted(object arg) {
            if ((this.SaveWebPartCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveWebPartCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://microsoft.com/sharepoint/webpartpages/SaveWebPart2", RequestNamespace="http://microsoft.com/sharepoint/webpartpages", ResponseNamespace="http://microsoft.com/sharepoint/webpartpages", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SaveWebPart2(string pageUrl, System.Guid storageKey, string webPartXml, Storage storage, bool allowTypeChange) {
            this.Invoke("SaveWebPart2", new object[] {
                        pageUrl,
                        storageKey,
                        webPartXml,
                        storage,
                        allowTypeChange});
        }
        
        /// <remarks/>
        public void SaveWebPart2Async(string pageUrl, System.Guid storageKey, string webPartXml, Storage storage, bool allowTypeChange) {
            this.SaveWebPart2Async(pageUrl, storageKey, webPartXml, storage, allowTypeChange, null);
        }
        
        /// <remarks/>
        public void SaveWebPart2Async(string pageUrl, System.Guid storageKey, string webPartXml, Storage storage, bool allowTypeChange, object userState) {
            if ((this.SaveWebPart2OperationCompleted == null)) {
                this.SaveWebPart2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveWebPart2OperationCompleted);
            }
            this.InvokeAsync("SaveWebPart2", new object[] {
                        pageUrl,
                        storageKey,
                        webPartXml,
                        storage,
                        allowTypeChange}, this.SaveWebPart2OperationCompleted, userState);
        }
        
        private void OnSaveWebPart2OperationCompleted(object arg) {
            if ((this.SaveWebPart2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveWebPart2Completed(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://microsoft.com/sharepoint/webpartpages/DeleteWebPart", RequestNamespace="http://microsoft.com/sharepoint/webpartpages", ResponseNamespace="http://microsoft.com/sharepoint/webpartpages", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteWebPart(string pageUrl, System.Guid storageKey, Storage storage) {
            this.Invoke("DeleteWebPart", new object[] {
                        pageUrl,
                        storageKey,
                        storage});
        }
        
        /// <remarks/>
        public void DeleteWebPartAsync(string pageUrl, System.Guid storageKey, Storage storage) {
            this.DeleteWebPartAsync(pageUrl, storageKey, storage, null);
        }
        
        /// <remarks/>
        public void DeleteWebPartAsync(string pageUrl, System.Guid storageKey, Storage storage, object userState) {
            if ((this.DeleteWebPartOperationCompleted == null)) {
                this.DeleteWebPartOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteWebPartOperationCompleted);
            }
            this.InvokeAsync("DeleteWebPart", new object[] {
                        pageUrl,
                        storageKey,
                        storage}, this.DeleteWebPartOperationCompleted, userState);
        }
        
        private void OnDeleteWebPartOperationCompleted(object arg) {
            if ((this.DeleteWebPartCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteWebPartCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://microsoft.com/sharepoint/webpartpages/GetWebPartPageConnectionInfo", RequestNamespace="http://microsoft.com/sharepoint/webpartpages", ResponseNamespace="http://microsoft.com/sharepoint/webpartpages", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetWebPartPageConnectionInfo(string sourcePageUrl, string sourcePageContents, string providerPartID, string lcid) {
            object[] results = this.Invoke("GetWebPartPageConnectionInfo", new object[] {
                        sourcePageUrl,
                        sourcePageContents,
                        providerPartID,
                        lcid});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetWebPartPageConnectionInfoAsync(string sourcePageUrl, string sourcePageContents, string providerPartID, string lcid) {
            this.GetWebPartPageConnectionInfoAsync(sourcePageUrl, sourcePageContents, providerPartID, lcid, null);
        }
        
        /// <remarks/>
        public void GetWebPartPageConnectionInfoAsync(string sourcePageUrl, string sourcePageContents, string providerPartID, string lcid, object userState) {
            if ((this.GetWebPartPageConnectionInfoOperationCompleted == null)) {
                this.GetWebPartPageConnectionInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetWebPartPageConnectionInfoOperationCompleted);
            }
            this.InvokeAsync("GetWebPartPageConnectionInfo", new object[] {
                        sourcePageUrl,
                        sourcePageContents,
                        providerPartID,
                        lcid}, this.GetWebPartPageConnectionInfoOperationCompleted, userState);
        }
        
        private void OnGetWebPartPageConnectionInfoOperationCompleted(object arg) {
            if ((this.GetWebPartPageConnectionInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetWebPartPageConnectionInfoCompleted(this, new GetWebPartPageConnectionInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://microsoft.com/sharepoint/webpartpages/GetWebPartCrossPageCompatibility", RequestNamespace="http://microsoft.com/sharepoint/webpartpages", ResponseNamespace="http://microsoft.com/sharepoint/webpartpages", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetWebPartCrossPageCompatibility(string sourcePageUrl, string sourcePageContents, string targetPageUrl, string targetPageContents, string providerPartID, string lcid) {
            object[] results = this.Invoke("GetWebPartCrossPageCompatibility", new object[] {
                        sourcePageUrl,
                        sourcePageContents,
                        targetPageUrl,
                        targetPageContents,
                        providerPartID,
                        lcid});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetWebPartCrossPageCompatibilityAsync(string sourcePageUrl, string sourcePageContents, string targetPageUrl, string targetPageContents, string providerPartID, string lcid) {
            this.GetWebPartCrossPageCompatibilityAsync(sourcePageUrl, sourcePageContents, targetPageUrl, targetPageContents, providerPartID, lcid, null);
        }
        
        /// <remarks/>
        public void GetWebPartCrossPageCompatibilityAsync(string sourcePageUrl, string sourcePageContents, string targetPageUrl, string targetPageContents, string providerPartID, string lcid, object userState) {
            if ((this.GetWebPartCrossPageCompatibilityOperationCompleted == null)) {
                this.GetWebPartCrossPageCompatibilityOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetWebPartCrossPageCompatibilityOperationCompleted);
            }
            this.InvokeAsync("GetWebPartCrossPageCompatibility", new object[] {
                        sourcePageUrl,
                        sourcePageContents,
                        targetPageUrl,
                        targetPageContents,
                        providerPartID,
                        lcid}, this.GetWebPartCrossPageCompatibilityOperationCompleted, userState);
        }
        
        private void OnGetWebPartCrossPageCompatibilityOperationCompleted(object arg) {
            if ((this.GetWebPartCrossPageCompatibilityCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetWebPartCrossPageCompatibilityCompleted(this, new GetWebPartCrossPageCompatibilityCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://microsoft.com/sharepoint/webpartpages")]
    public enum SPWebServiceBehavior {
        
        /// <remarks/>
        Version3,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://microsoft.com/sharepoint/webpartpages")]
    public enum FormatConversionOption {
        
        /// <remarks/>
        ConvertToWebPartExportFormat,
        
        /// <remarks/>
        ConvertToWebPartDesignerPersistenceFormat,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://microsoft.com/sharepoint/webpartpages")]
    public enum Storage {
        
        /// <remarks/>
        None,
        
        /// <remarks/>
        Personal,
        
        /// <remarks/>
        Shared,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetWebPartPageDocumentCompletedEventHandler(object sender, GetWebPartPageDocumentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetWebPartPageDocumentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetWebPartPageDocumentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetWebPartPageCompletedEventHandler(object sender, GetWebPartPageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetWebPartPageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetWebPartPageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void RenderWebPartForEditCompletedEventHandler(object sender, RenderWebPartForEditCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RenderWebPartForEditCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RenderWebPartForEditCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetXmlDataFromDataSourceCompletedEventHandler(object sender, GetXmlDataFromDataSourceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetXmlDataFromDataSourceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetXmlDataFromDataSourceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetFormCapabilityFromDataSourceControlCompletedEventHandler(object sender, GetFormCapabilityFromDataSourceControlCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFormCapabilityFromDataSourceControlCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFormCapabilityFromDataSourceControlCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetExpandedListViewXmlCompletedEventHandler(object sender, GetExpandedListViewXmlCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetExpandedListViewXmlCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetExpandedListViewXmlCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetDataFromDataSourceControlCompletedEventHandler(object sender, GetDataFromDataSourceControlCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDataFromDataSourceControlCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDataFromDataSourceControlCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void FetchLegalWorkflowActionsCompletedEventHandler(object sender, FetchLegalWorkflowActionsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FetchLegalWorkflowActionsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FetchLegalWorkflowActionsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void ValidateWorkflowMarkupAndCreateSupportObjectsCompletedEventHandler(object sender, ValidateWorkflowMarkupAndCreateSupportObjectsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ValidateWorkflowMarkupAndCreateSupportObjectsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ValidateWorkflowMarkupAndCreateSupportObjectsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void AssociateWorkflowMarkupCompletedEventHandler(object sender, AssociateWorkflowMarkupCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AssociateWorkflowMarkupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AssociateWorkflowMarkupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void RemoveWorkflowAssociationCompletedEventHandler(object sender, RemoveWorkflowAssociationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RemoveWorkflowAssociationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RemoveWorkflowAssociationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void ConvertWebPartFormatCompletedEventHandler(object sender, ConvertWebPartFormatCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ConvertWebPartFormatCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ConvertWebPartFormatCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetAssemblyMetaDataCompletedEventHandler(object sender, GetAssemblyMetaDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAssemblyMetaDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAssemblyMetaDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetBindingResourceDataCompletedEventHandler(object sender, GetBindingResourceDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBindingResourceDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBindingResourceDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void ExecuteProxyUpdatesCompletedEventHandler(object sender, ExecuteProxyUpdatesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ExecuteProxyUpdatesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ExecuteProxyUpdatesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void AddWebPartToZoneCompletedEventHandler(object sender, AddWebPartToZoneCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddWebPartToZoneCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddWebPartToZoneCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Guid Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Guid)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void AddWebPartCompletedEventHandler(object sender, AddWebPartCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddWebPartCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddWebPartCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Guid Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Guid)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetWebPartCompletedEventHandler(object sender, GetWebPartCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetWebPartCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetWebPartCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetWebPart2CompletedEventHandler(object sender, GetWebPart2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetWebPart2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetWebPart2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetCustomControlListCompletedEventHandler(object sender, GetCustomControlListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCustomControlListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCustomControlListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetSafeAssemblyInfoCompletedEventHandler(object sender, GetSafeAssemblyInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSafeAssemblyInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSafeAssemblyInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetWebPartPropertiesCompletedEventHandler(object sender, GetWebPartPropertiesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetWebPartPropertiesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetWebPartPropertiesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetWebPartProperties2CompletedEventHandler(object sender, GetWebPartProperties2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetWebPartProperties2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetWebPartProperties2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void SaveWebPartCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void SaveWebPart2CompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void DeleteWebPartCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetWebPartPageConnectionInfoCompletedEventHandler(object sender, GetWebPartPageConnectionInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetWebPartPageConnectionInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetWebPartPageConnectionInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetWebPartCrossPageCompatibilityCompletedEventHandler(object sender, GetWebPartCrossPageCompatibilityCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetWebPartCrossPageCompatibilityCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetWebPartCrossPageCompatibilityCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591